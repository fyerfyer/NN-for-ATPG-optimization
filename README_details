We provide three versions of automatic test pattern generators: 
	1. FAN: The original implementation of the FAN algorithm, serving as a benchmark ATPG algorithm.
	2. NN-Hyb: Our NN-guided ATPG algorithm.
	3. NN-All: ML model is applied to levels of a circuit.

This file structure includes:
- artifacts_submission
	- README
	- FAN: The original implementation of FAN algorithm.
	- NN-Hyb: Our NN-guided ATPG algorithm.
	- NN-All: ML model is applied to levels of a circuit
	- circuits: All the circuit files.
	- hard_faults: Hard-to-detect-fault fault files.
	- script: Scripts to run our code.


Installation:
1. Navigate to the appropriate directory:
	- "./NN-Hyb" for the NN-guided ATPG algorithm.
	- "./FAN" for the FAN algorithm.
	- "./NN-All" for the NN-All algorithm.
2. Compile atalanta, use "make" command to create binary file "atalanta". 
3. Once compiled, run Atalanta under default settings using the command "./atalanta [path to circuit file]".


Options:
-b n	 The number of maximum backtrackings for the FAN algorithm phase 1. (default: -b 10)

-B n	 If -B n (n>0) option is specified, atalanta generates test patterns in two phases. In phase 1, static unique path sensitization is employed. If the test generation for a target fault is aborted in phase 1, the test generation is tried in phase 2. In phase 2, dynamic unique path sensitization is employed. If n=0, phase 2 is not performed. If n>0, phase 2 test generation is performed with the backtrack limit of n. (default: -B 0, i.e., phase 2 is not performed.)

-f fn    Faults are read from the file fn. This option is available only for ISCAS89 netlist format. (default: faults are generated internally.)

-l fn    Log file is created. (default: no logfile is created)

-s n	 Initial seed for the random number generator (random()). If n=0, the initial seed is the current time. (default: -s 0)

-t fn    Test patterns are put into the file "fn". (default: *.test for a circuit named *.bench)

-U fn    Writes aborted faults to the given file name. (default: no file is created)

Run Experiments:
To reproduce results for "all faults cases", use scripts:
	- AllFault_FAN.sh
	- AllFault_NN-All.sh
	- AllFault_NN-Hyb.sh 
The command should be like "bash script/AllFault_NN-Hyb.sh". The outputs contain all results shown in Table I.

To reproduce results for "hard-to-detect faults", use scripts: 
	- H2D_FAN.sh
	- H2D_NN-Hyb.sh
The command should be like "bash script/H2D_NN-Hyb.sh". The outputs contain all results shown in Table II.

To reproduce results for NN-Hyb without acceleration, use the command "bash script/NoAcceleration_NN-Hyb.sh". The outputs contain all results for NN-Hyb without lookup table shown in Table III.

Customized Data Usage:
To use one of our methods with customized data, run the command "[path to atalanta] -b [backtracking limits] -f [path fault file] [path to circuit file]". If options are not defined, default setting will be used.